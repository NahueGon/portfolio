---
import SunIcon from "./icons/SunIcon.astro";
import MoonIcon from "./icons/MoonIcon.astro";

const THEMES = ["light", "dark"];

---

<div class="relative ml-1 mr-1">
  <button
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
  >
    <span class="sr-only">Elige el tema</span>
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
    <MoonIcon id="dark" class="theme-toggle-icon absolute size-5 transition-all" />
  </button>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function () {
    let remove = null;
    const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");

    // Función para obtener la preferencia de tema desde localStorage
    const getThemePreference = () => {
      if (typeof localStorage !== "undefined") {
        return localStorage.getItem("theme") ?? "light"; // Predeterminado a "light"
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    };

    // Actualiza los íconos según el tema seleccionado
    const updateIcon = (themePreference) => {
      document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
        element.style.scale = element.id === themePreference ? "1" : "0";
      });
    };

    // Función que aplica el tema adecuado
    const updateTheme = () => {
      if (remove != null) {
        remove();
      }
      matchMedia.addEventListener("change", updateTheme);
      remove = () => {
        matchMedia.removeEventListener("change", updateTheme);
      };

      const themePreference = getThemePreference();
      const isDark = themePreference === "dark";

      updateIcon(themePreference);
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");
    };

    updateTheme();

    // Cambio de tema al hacer clic en los íconos
    document.getElementById("theme-toggle-btn").addEventListener("click", () => {
      // Obtener el tema actual desde localStorage
      const currentTheme = getThemePreference();

      // Alternar el tema entre "light" y "dark"
      const newTheme = currentTheme === "dark" ? "light" : "dark";

      // Guardar el nuevo tema en localStorage
      localStorage.setItem("theme", newTheme);

      // Actualizar el tema y el icono
      updateTheme();
    });
  });
</script>
